---
- name: Install specific updates on Windows servers
  hosts: windows
  gather_facts: no
  vars:
    update_month: "{{ update_month }}"
    update_year: "{{ update_year }}"

  tasks:
    - name: Ensure the specified month and year are provided
      fail:
        msg: "Please provide the 'update_month' and 'update_year' as parameters."
      when: update_month is not defined or update_year is not defined

    - name: Get updates released in the specified month and year
      win_shell: |
        $month = {{ update_month }}
        $year = {{ update_year }}
        $updates = Get-WindowsUpdate -MicrosoftUpdate -Criteria "IsInstalled=0 and Type='Software' and (CategoryIDs contains '0fc73b4d-9ea4-4c49-bf96-60d8aef248e7' or CategoryIDs contains 'e6cf1350-c01b-414d-a61f-263d14d133b4' or CategoryIDs contains 'e0789628-ce08-4437-be74-2495b842f43b')"
        $filteredUpdates = $updates | Where-Object { $_.LastDeploymentChangeTime.Month -eq $month -and $_.LastDeploymentChangeTime.Year -eq $year }
        $filteredUpdates | Select-Object -Property Title, KBArticleID, LastDeploymentChangeTime
      register: updates_list

    - name: Debug updates list
      debug:
        var: updates_list.stdout_lines

    - name: Install filtered updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - DefinitionUpdates
        accept_list: "{{ updates_list.stdout_lines | map('regex_replace', 'KB([0-9]+)', 'KB\\1') | list }}"
      when: updates_list.stdout_lines | length > 0

    - name: Notify if no updates are found for the specified month and year
      debug:
        msg: "No updates found for {{ update_month }}/{{ update_year }}."
      when: updates_list.stdout_lines | length == 0
