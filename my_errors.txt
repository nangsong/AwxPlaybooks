---
- name: Check Windows servers for uptime and send report
  hosts: windows_servers
  gather_facts: no
  vars:
    report_file: "/tmp/windows_uptime_report.html"
    email_subject: "Windows Servers Uptime Report (>= 30 Days)"
    email_to: "admin@example.com"
    email_from: "ansible@example.com"
    smtp_server: "smtp.example.com"
    smtp_port: 587
    smtp_username: "smtp_user@example.com"
    smtp_password: "smtp_password"
    uptime_threshold: 30  # Days

  tasks:
    - name: Get last boot time from Windows servers
      win_shell: |
        $lastBootTime = (Get-CimInstance -ClassName Win32_OperatingSystem).LastBootUpTime
        [PSCustomObject]@{
          Server = $env:COMPUTERNAME
          LastBootTime = $lastBootTime.ToString("yyyy-MM-dd HH:mm:ss")
          UptimeDays = [math]::Round((New-TimeSpan -Start $lastBootTime -End (Get-Date)).TotalDays, 2)
        } | ConvertTo-Json
      register: boot_time

    - name: Debug boot_time output
      debug:
        var: boot_time.stdout

    - name: Parse JSON output
      set_fact:
        server_data: "{{ (server_data | default([])) + [item] }}"
      loop: "{{ boot_time.stdout | from_json }}"
      when: boot_time.stdout is defined and boot_time.stdout | trim != ''

    - name: Filter servers with uptime >= {{ uptime_threshold }} days
      set_fact:
        filtered_servers: "{{ server_data | selectattr('UptimeDays', '>=', uptime_threshold) }}"

    - name: Generate HTML report
      delegate_to: localhost
      run_once: yes
      block:
        - name: Create HTML table
          set_fact:
            html_table: |
              <html>
              <head><title>{{ email_subject }}</title></head>
              <body>
              <h2>{{ email_subject }}</h2>
              <table border="1" cellpadding="5" cellspacing="0">
              <tr>
                <th>Server</th>
                <th>Last Boot Time</th>
                <th>Uptime (Days)</th>
              </tr>
              {% for server in filtered_servers %}
              <tr>
                <td>{{ server.Server }}</td>
                <td>{{ server.LastBootTime }}</td>
                <td>{{ server.UptimeDays }}</td>
              </tr>
              {% endfor %}
              </table>
              </body>
              </html>

        - name: Save HTML report to file
          copy:
            content: "{{ html_table }}"
            dest: "{{ report_file }}"

    - name: Send HTML report via email
      delegate_to: localhost
      run_once: yes
      community.general.mail:
        host: "{{ smtp_server }}"
        port: "{{ smtp_port }}"
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        to: "{{ email_to }}"
        subject: "{{ email_subject }}"
        body: "{{ html_table }}"
        subtype: html
      when: filtered_servers | length > 0

    - name: Display servers not rebooted for more than {{ uptime_threshold }} days
      debug:
        msg: "Server {{ item.Server }} has not been rebooted for {{ item.UptimeDays }} days."
      loop: "{{ filtered_servers }}"
      when: filtered_servers | length > 0