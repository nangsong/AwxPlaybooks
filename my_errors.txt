- name: Get cluster health from node
  win_shell: |
    # Initialize result structure
    $result = @{
        ClusterName = ""
        CurrentNode = $env:COMPUTERNAME
        IsClusterNode = $false
        Resources = @()
        Error = $null
    }

    try {
        # METHOD 1: Check if current node is part of any cluster
        $clusterNode = Get-ClusterNode -Name $env:COMPUTERNAME -ErrorAction SilentlyContinue
        
        if ($clusterNode) {
            $result.IsClusterNode = $true
            $cluster = Get-Cluster -Name $clusterNode.Cluster.Name
            $result.ClusterName = $cluster.Name
            
            # Get all resources with detailed status
            $result.Resources = Get-ClusterResource -Cluster $cluster.Name | ForEach-Object {
                @{
                    Name = $_.Name
                    State = $_.State.ToString()
                    OwnerNode = (Get-ClusterOwner -InputObject $_).Owners -join ", "
                    Group = $_.OwnerGroup
                    LastFailover = if ($_.LastFailoverTime) { $_.LastFailoverTime.ToString() } else { "Never" }
                }
            }
        } else {
            $result.Error = "This node does not belong to any cluster"
        }
    }
    catch {
        $result.Error = $_.Exception.Message
    }

    $result | ConvertTo-Json -Depth 5
  args:
    executable: powershell.exe
  register: cluster_health_data

- name: Show cluster status
  debug:
    var: cluster_health_data.stdout
