
⸻

✅ Part 1: Removing a Node from the Cluster

⚠️ Pre-checks before removing a node:

	•	Ensure the node has no active cluster roles (move them to another node).
	•	Ensure quorum will not be lost if the node is removed.
	•	Validate cluster health before making changes.

Step-by-step:
	1.	Open Failover Cluster Manager (FCM)
	•	On any node, open Failover Cluster Manager.
	2.	Connect to Cluster (if not already connected)
	•	Right-click on Failover Cluster Manager, choose “Connect to Cluster”, and select your cluster name.
	3.	Drain Roles (if any are running on the node)
	•	Expand the cluster name → go to Nodes
	•	Right-click on the node to remove → “Pause” > “Drain Roles”
	•	Wait for all roles to move.
	4.	Pause and Evict the Node
	•	Right-click on the node again → “More Actions” > “Evict”
	•	Confirm the eviction.
	5.	Verify Node Removal
	•	The node should disappear from the Nodes section.
	•	Review cluster events and validation to ensure no issues occurred.

⸻

✅ Part 2: Adding the Node Back to the Cluster

⚠️ Pre-checks before adding a node:

	•	Ensure the node has:
	•	Same Windows Server OS version and patch level.
	•	Cluster feature installed (Failover-Clustering feature).
	•	Proper DNS resolution and firewall settings.
	•	All necessary storage/network access.
	•	Optional but recommended: Run “Validate Cluster” before adding.

Step-by-step:
	1.	Install Failover Clustering Feature (if not installed)
On the node:

Install-WindowsFeature -Name Failover-Clustering -IncludeManagementTools -Restart

	2.	Open Failover Cluster Manager
	•	On any node that’s already part of the cluster.
	3.	Connect to the Cluster (if not already)
	•	Right-click Failover Cluster Manager, choose “Connect to Cluster”, select your cluster.
	4.	Add Node to Cluster
	•	Right-click Nodes → “Add Node”
	•	Type the hostname of the node you want to add.
	5.	Validation Wizard (Recommended)
	•	It will prompt you to run cluster validation.
	•	Choose Yes and run “Run only tests I select” or “Run all tests” for thorough validation.
	6.	Complete the Wizard
	•	Once validation passes, follow the prompts to add the node.
	7.	Verify Node Addition
	•	Ensure the node appears under Nodes.
	•	Verify it shows as Up and Running.
	•	Optionally Resume the node if it’s paused.
	8.	Test Cluster Role Failover (optional but recommended)
	•	Move a role to the newly added node to verify its functionality.

🛡️ Post Steps & Best Practices
	•	Monitor Event Viewer for cluster-related logs.
	•	Monitor Failover Cluster Manager for health.
	•	Consider resuming cluster-aware backups/monitoring/patching tools on the added node.

✅ Steps to Drain a Node (Without Eviction)

1. Open Failover Cluster Manager
	•	Open Failover Cluster Manager on any cluster node or your management workstation.
	•	Connect to the relevant cluster if not already connected.

2. Navigate to Nodes
	•	Expand the cluster name → Click on Nodes.

3. Pause and Drain the Node
	•	Right-click the node you want to drain.
	•	Select:
“Pause” > “Drain Roles”

This action will:
	•	Move all cluster roles (VMs, file shares, SQL instances, etc.) to other nodes.
	•	Mark the node as Paused, so it won’t receive new workloads until resumed.

4. Verify Roles Were Moved
	•	Go to Roles in the left pane.
	•	Check that all roles are now running on other nodes.

5. (Optional) Perform Maintenance
	•	You can now safely:
	•	Patch the node.
	•	Reboot it.
	•	Perform updates or diagnostics.

✅ Resuming the Node After Maintenance

Once you’re done:

6. Resume the Node
	•	Go back to Nodes, right-click the paused node.
	•	Choose:
“Resume” > “Do Not Fail Roles Back” (recommended to avoid unnecessary failovers)
OR
“Resume” > “Fail Roles Back” (if you want the roles to return to the original node).

✅ Steps to Set Node Priority (Preferred Owners) Using Failover Cluster Manager

1. Open Failover Cluster Manager
	•	Open Failover Cluster Manager.
	•	Connect to your cluster if not already connected.

2. Navigate to Roles
	•	In the left pane, expand your cluster and click on Roles.
	•	You’ll see the list of clustered roles (VMs, file servers, SQL instances, etc.).

3. Right-click the Role You Want to Prioritize
	•	Select Properties.

4. Go to the ‘Preferred Owners’ Tab
	•	In the Properties window, go to the “Preferred Owners” tab.

5. Set Node Priority
	•	You’ll see a list of all cluster nodes.
	•	Check the boxes next to nodes you want to allow as preferred owners.
	•	Reorder them using Move Up / Move Down — the node at the top will have the highest priority.
⚠️ If a role fails, the cluster will try nodes in this order.

6. Apply the Changes
	•	Click OK or Apply to confirm.

✅ PowerShell to Drain a Cluster Node
Suspend-ClusterNode -Name "NodeName" -Drain

This will:
	•	Pause the node (ClusterNode01) in the cluster.
	•	Live migrate all roles (e.g., clustered VMs, SQL instances, etc.) to other nodes.
	•	Prevent any new roles from being moved to that node.

🧠 Check Node Status After Drain
Get-ClusterNode -Name "ClusterNode01" | Format-List Name, State, NodeWeight

✅ PowerShell to Resume the Node (After Maintenance)
Resume-ClusterNode -Name "ClusterNode01" -Failback None

Use -Failback None to resume the node without moving roles back (recommended).
Use -Failback Immediate if you want roles to return to that node 



Get-WinEvent -LogName System -FilterHashtable @{Id=1074} -MaxEvents 1 | 
Select-Object TimeCreated,
              @{Name='User'; Expression={$_.Properties[6].Value}},
              @{Name='Process'; Expression={$_.Properties[0].Value}},
              @{Name='Reason'; Expression={$_.Properties[2].Value}},
              @{Name='Comment'; Expression={$_.Properties[5].Value}}
&&&&&&&&&&&&&&&&&&$$$$$$$$$$$$$$$$$$@@@@@@nangsonghermann@gmail.com

To prevent users from checking for or installing updates manually when they log in to Windows Servers (and instead maintain centralized control via WSUS, SCCM, or Ansible), you can configure a Group Policy Object (GPO) that:
	1.	Disables access to Windows Update in the Settings app.
	2.	Prevents manual installation of updates.
	3.	Ensures update settings are enforced centrally.

Here’s a step-by-step guide to configure such a GPO:

⸻

1. Create a New GPO
	•	Open Group Policy Management Console (GPMC).
	•	Right-click the OU or domain where your servers are located.
	•	Choose “Create a GPO in this domain, and Link it here…”.
	•	Name it something like: Server_Restrict_Updates.

⸻

2. Edit the GPO

Right-click the GPO you just created > Edit.

⸻

3. Configure Windows Update Restrictions

Go to:
Computer Configuration > Administrative Templates > Windows Components > Windows Update

Enable the following policies:

A. Remove Access to Use All Windows Update Features
	•	Policy Name: Remove access to use all Windows Update features
	•	Path:
Computer Configuration > Administrative Templates > Windows Components > Windows Update


	•	Setting: Enabled
	•	Option: Users will not be able to access Windows Update

B. Configure Automatic Updates
	•	Policy Name: Configure Automatic Updates
	•	Setting: Enabled
	•	Choose option 4 - Auto download and schedule the install
	•	Set scheduled install day/time (this can also be controlled via WSUS/SCCM/Ansible if applicable)

C. Do Not Connect to Any Windows Update Internet Locations
	•	Path:
Computer Configuration > Administrative Templates > Windows Components > Windows Update


	•	Setting: Enabled
(Prevents fallback to Microsoft Update even if WSUS is unavailable)

⸻

4. Optional: Prevent Access to Settings UI

To go a step further, disable access to the “Update & Security” section in the Settings app:
	•	Path:
User Configuration > Administrative Templates > Control Panel > Personalization


	•	Policy: Prohibit access to Control Panel and PC settings
	•	Setting: Enabled

Or more targeted:
	•	Path:
User Configuration > Administrative Templates > Start Menu and Taskbar

Policy: Disable setting page visibility
	•	Setting: Enabled
	•	Value: hide:windowsupdate

⸻

5. Link and Apply the GPO
	•	Link the GPO to the correct OU where the target Windows Servers reside.
	•	Run gpupdate /force on a test server.
	•	Log in with a user account and verify that:
	•	Windows Update is inaccessible.
	•	Manual check for updates is blocked.
	•	Settings are greyed out or hidden.

⸻

6. Use WSUS or Automation Tools for Patching
	•	Now that manual updates are blocked, use:
	•	WSUS to approve and schedule patches.
	•	SCCM for fine-grained patch deployment.
	•	Ansible to automate and report patch status (as you’re already building a patching solution with Ansible).

⸻

Notes:
	•	Apply this only to servers, not workstations.
	•	Test the GPO in a non-production OU first.
	•	This method does not block updates—it blocks users from manually triggering them.

Let me know if you’d like a ready-made .admx GPO backup or an Ansible role to validate this GPO is applied across your estate.



