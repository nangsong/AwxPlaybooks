### Ansible Playbook to Generate and Send Consolidated SQL Cluster Health Report ###
- name: Generate and send SQL Cluster Health Report
  hosts: all
  gather_facts: no
  tasks:
    - name: Execute PowerShell script to gather cluster health data from each host
      win_shell: |
        try {
          $cluster = (Get-Cluster -Cluster $env:COMPUTERNAME).Name
          $resources = Get-ClusterResource -Cluster $cluster | Select-Object -Property Name, State, OwnerGroup, LastFailoverTime
          $output = @()
          foreach ($resource in $resources) {
            $output += [PSCustomObject]@{
              ClusterName = $cluster
              Node = $env:COMPUTERNAME
              ResourceName = $resource.Name
              Status = $resource.State
              OwnerGroup = $resource.OwnerGroup
              LastFailover = $resource.LastFailoverTime
            }
          }
          $output | ConvertTo-Json -Compress
        } catch {
          [PSCustomObject]@{
            ClusterName = "Unknown"
            Node = $env:COMPUTERNAME
            ResourceName = "Error"
            Status = "Failed"
            OwnerGroup = "N/A"
            LastFailover = "N/A"
          } | ConvertTo-Json -Compress
        }
      args:
        executable: powershell.exe
      register: cluster_health_data

    - name: Aggregate cluster health data
      ansible.builtin.set_fact:
        consolidated_data: "{{ consolidated_data | default([]) + [cluster_health_data.stdout | from_json] }}"

    - name: Generate consolidated HTML report
      ansible.builtin.shell: |
        echo "<html><body><h2>SQL Cluster Health Report</h2><table border='1'>" > /tmp/cluster_health_report.html
        echo "<tr><th>Cluster Name</th><th>Node</th><th>Resource Name</th><th>Status</th><th>Owner Group</th><th>Last Failover</th></tr>" >> /tmp/cluster_health_report.html
        {% for cluster in consolidated_data %}
        echo "<tr><td>{{ cluster.ClusterName }}</td><td>{{ cluster.Node }}</td><td>{{ cluster.ResourceName }}</td><td>{{ cluster.Status }}</td><td>{{ cluster.OwnerGroup }}</td><td>{{ cluster.LastFailover }}</td></tr>" >> /tmp/cluster_health_report.html
        {% endfor %}
        echo "</table></body></html>" >> /tmp/cluster_health_report.html
      delegate_to: localhost

    - name: Send consolidated health report via email
      ansible.builtin.mail:
        host: smtp.example.com
        port: 25
        from: cluster-report@example.com
        to: admin@example.com
        subject: 'SQL Cluster Health Report - Consolidated'
        body: "{{ lookup('file', '/tmp/cluster_health_report.html') }}"
        subtype: html
