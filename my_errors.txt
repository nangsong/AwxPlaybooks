---
- name: Windows Server Compliance Check
  hosts: windows
  gather_facts: no
  vars:
    compliance_days: 15
    max_uptime_days: 6
    smtp_server: "smtp.example.com"
    smtp_port: 587
    smtp_username: "your_email@example.com"
    smtp_password: "your_password"
    email_from: "your_email@example.com"
    email_to: "recipient@example.com"
    email_subject: "Non-Compliant Windows Servers Report"

  tasks:
    - name: Gather Windows updates information
      win_updates:
        category_names:
          - SecurityUpdates
        state: searched
      register: windows_updates

    - name: Get server uptime
      win_shell: |
        $os = Get-WmiObject -Class Win32_OperatingSystem
        $uptime = (Get-Date) - $os.LastBootUpTime
        [math]::Round($uptime.TotalDays, 2)
      register: server_uptime

    - name: Determine compliance
      set_fact:
        non_compliant_servers: "{{ non_compliant_servers | default([]) + [{'server_name': inventory_hostname, 'reason': []}] }}"
      when: >
        (windows_updates.updates | selectattr('installed', 'equalto', true) | map(attribute='installed_date') | max | default('1970-01-01') | to_datetime) < (ansible_date_time.iso8601 | to_datetime - (compliance_days * 86400)) or
        (server_uptime.stdout | float) > max_uptime_days

    - name: Add reason for non-compliance (no patch received)
      set_fact:
        non_compliant_servers: "{{ non_compliant_servers | map('combine', {'reason': item.reason + ['no patch received']}) | list }}"
      when: >
        (windows_updates.updates | selectattr('installed', 'equalto', true) | map(attribute='installed_date') | max | default('1970-01-01') | to_datetime) < (ansible_date_time.iso8601 | to_datetime - (compliance_days * 86400))
      with_items: "{{ non_compliant_servers }}"

    - name: Add reason for non-compliance (server was not rebooted)
      set_fact:
        non_compliant_servers: "{{ non_compliant_servers | map('combine', {'reason': item.reason + ['server was not rebooted']}) | list }}"
      when: >
        (server_uptime.stdout | float) > max_uptime_days
      with_items: "{{ non_compliant_servers }}"

    - name: Generate report
      set_fact:
        report_table: |
          Server Name | Reason
          ----------- | ------
          {% for server in non_compliant_servers %}
          {{ server.server_name }} | {{ server.reason | join(', ') }}
          {% endfor %}

    - name: Send email report
      mail:
        host: "{{ smtp_server }}"
        port: "{{ smtp_port }}"
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        from: "{{ email_from }}"
        to: "{{ email_to }}"
        subject: "{{ email_subject }}"
        body: "{{ report_table }}"
      when: non_compliant_servers is defined and non_compliant_servers | length > 0
